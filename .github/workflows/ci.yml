name: Build

on:
  workflow_dispatch:
  schedule:
    - cron: '0 3 * * *'
  push:
    branches:
    - main
    paths-ignore:
      - '*.md'
      - LICENSE
  pull_request:
    branches:
    - main
    paths-ignore:
      - '*.md'
      - LICENSE

jobs:
  build:
    runs-on: ${{ matrix.os.name }}
    strategy:
      # we want to run the full build on all os: don't cancel running jobs even if one fails
      fail-fast: false
      matrix:
        # syntax inspired from https://github.community/t5/GitHub-Actions/Using-a-matrix-defined-input-for-a-custom-action/m-p/32032/highlight/true#M988
        os:
          - {name: macos-12, short: "macos" }
          - {name: windows-2019, short: "windows" }
          - {name: ubuntu-20.04, short: "ubuntu" }
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Setup JDK
      uses: actions/setup-java@v3
      with:
        java-version: 11
        distribution: 'temurin'
    - name: Build Bonita Runtime Bundle
      shell: bash
      run: ./build-script.sh
      env:
        BONITA_BUILD_QUIET: false
        BONITA_BUILD_STUDIO_SKIP: true
    - name: Upload Bonita Runtime Bundle
      # see https://help.github.com/en/github/automating-your-workflow-with-github-actions/persisting-workflow-data-using-artifacts and https://github.com/actions/upload-artifact
      uses: actions/upload-artifact@v3
      with:
        # see https://github.community/t5/GitHub-Actions/Use-variables-in-upload-artifact/m-p/34778#M2009
        name: bonita-bundle-${{matrix.os.short}}-build-${{github.sha}}
        path: bonita-distrib/tomcat/target/*.zip
    - name: Build Studio
      shell: bash
      run: ./build-script.sh
      env:
        BONITA_BUILD_QUIET: false
        BONITA_BUILD_STUDIO_ONLY: true
    - name: Upload Bonita Studio
      # see https://github.com/actions/upload-artifact
      uses: actions/upload-artifact@v3
      with:
        name: bonita-studio-${{matrix.os.short}}-build-${{github.sha}}
        path: bonita-studio/all-in-one/target/*.zip    
  slack:
    name: Notify Slack Failure
    needs: build
    runs-on: ubuntu-latest    
    steps:
      - uses: technote-space/workflow-conclusion-action@v3
      - name: Send failure message to Slack channel
        if: ${{ github.event_name != 'pull_request' && env.WORKFLOW_CONCLUSION == 'failure'}}
        uses: bonitasoft/actions/packages/notify-slack@main        
        with:
          CHANNEL_ID: ${{ secrets.CHANNEL_ID }}
          MESSAGE: |
            :bomb: :fire:  Community build failed
          
            - Add a :fire_extinguisher:if you take the action to resolve the conflicts (only one person is required)
            - Add a :sweat_drops: when itâ€™s done (and eventually a :party_parrot: )"
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
